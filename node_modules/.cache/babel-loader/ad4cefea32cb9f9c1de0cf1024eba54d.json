{"ast":null,"code":"var _jsxFileName = \"/Users/tadtab/Documents/2nd2020Recovery/ReactJS/react-complete-guide/src/App.js\";\nimport React, { Component } from 'react';\nimport classes from './App.module.css';\nimport Person from './Person/Person';\nimport styled from 'styled-components';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      persons: [{\n        id: \"1\",\n        name: \"Tadele\",\n        age: \"30\"\n      }, {\n        id: \"2\",\n        name: \"Unknown\",\n        age: \"45\"\n      }, {\n        id: \"3\",\n        name: \"ThirdPerson\",\n        age: \"67\"\n      }],\n      sampleText: \"This is extra\",\n      displayPersonList: false\n    };\n\n    this.deletePersonHandler = index => {\n      const persons = [...this.state.persons];\n      persons.splice(index, 1);\n      this.setState({\n        persons: persons\n      });\n    };\n\n    this.nameChangedHandler = (event, id) => {\n      const personIndex = this.state.persons.findIndex(person => {\n        return person.id == id;\n      });\n      const person = { ...this.state.persons[personIndex]\n      };\n      person.name = event.target.value;\n      const persons = [...this.state.persons];\n      persons[personIndex] = person;\n      this.setState({\n        persons: persons\n      });\n    };\n\n    this.manipulateDisplay = () => {\n      const isDisplay = this.state.displayPersonList;\n      this.setState({\n        displayPersonList: !isDisplay\n      });\n    };\n  }\n\n  render() {\n    let persons = null;\n\n    if (this.state.displayPersonList) {\n      persons = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 18\n        }\n      }, this.state.persons.map((person, index) => {\n        return /*#__PURE__*/React.createElement(Person, {\n          click: () => this.deletePersonHandler(index),\n          changed: event => {\n            this.nameChangedHandler(event, person.id);\n          },\n          name: person.name,\n          age: person.age,\n          key: person.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 19\n          }\n        });\n      }));\n    }\n\n    const classesArray = [];\n\n    if (this.state.persons.length <= 3) {\n      classesArray.push('red');\n    }\n\n    if (this.state.persons.length <= 1) {\n      classesArray.push('bold');\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.App,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }\n    }, \"Hello I am react App\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: classesArray.join(' '),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 5\n      }\n    }, \"Ready to toggle and length is \", this.state.persons.length), /*#__PURE__*/React.createElement(\"button\", {\n      className: classes.Button,\n      alt: this.state.displayPersonList,\n      onClick: this.manipulateDisplay,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }\n    }, \"Switch Person Display\"), persons); //return React.createElement(\"div\", {className: \"pp\"}, React.createElement(\"h1\", null, \"Hello I am react App\"))\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/tadtab/Documents/2nd2020Recovery/ReactJS/react-complete-guide/src/App.js"],"names":["React","Component","classes","Person","styled","App","state","persons","id","name","age","sampleText","displayPersonList","deletePersonHandler","index","splice","setState","nameChangedHandler","event","personIndex","findIndex","person","target","value","manipulateDisplay","isDisplay","render","map","classesArray","length","push","join","Button"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport classes from './App.module.css';\nimport Person from './Person/Person';\nimport styled from 'styled-components';\nclass App extends Component {\n  state = {\n    persons: [\n      {id: \"1\", name: \"Tadele\", age: \"30\"},\n      {id: \"2\", name: \"Unknown\", age: \"45\"},\n      {id: \"3\", name: \"ThirdPerson\", age: \"67\"}\n    ], \n    sampleText: \"This is extra\", \n    displayPersonList: false\n  }\n\n  \n\n  deletePersonHandler = (index) => {\n    const persons = [...this.state.persons];\n    persons.splice(index, 1)\n    this.setState({\n      persons: persons\n    })\n  }\n  \n  nameChangedHandler = (event, id) =>{\n    const personIndex = this.state.persons.findIndex(person => {\n        return person.id == id\n    })\n    const person = {...this.state.persons[personIndex]};\n    person.name = event.target.value;\n\n    const persons = [...this.state.persons];\n    persons[personIndex] = person; \n\n    this.setState({\n      persons: persons\n    })\n  }\n\n  manipulateDisplay = () => {\n    const isDisplay = this.state.displayPersonList;\n    this.setState({\n      displayPersonList: !isDisplay\n    })\n  }\n\n  render() {\n\n  \n    let persons = null; \n\n    if(this.state.displayPersonList){\n      persons = (<div>\n        {this.state.persons.map((person, index) => {\n          return (<Person \n                    click={() => this.deletePersonHandler(index)} \n                    changed={(event) => {this.nameChangedHandler(event, person.id)}}\n                    name={person.name} \n                    age={person.age} \n                    key={person.id}\n                    />);\n        })}\n        \n      </div>);\n    }\n\n    const classesArray = [];\n\n    if(this.state.persons.length <= 3){\n      classesArray.push('red');\n    }\n    if(this.state.persons.length <= 1){\n      classesArray.push('bold');\n    }\n\n    return (\n     \n    <div className={classes.App}>\n      <h1>Hello I am react App</h1>\n    <p className={classesArray.join(' ')}>Ready to toggle and length is {this.state.persons.length}</p>\n      <button className={classes.Button} alt={this.state.displayPersonList} onClick={this.manipulateDisplay}>Switch Person Display</button>\n      {persons}\n    </div>\n    \n    );\n    \n    //return React.createElement(\"div\", {className: \"pp\"}, React.createElement(\"h1\", null, \"Hello I am react App\"))\n      \n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}